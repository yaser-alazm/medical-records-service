generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model MedicalRecord {
  id                Int      @id @default(autoincrement())
  patientId         Int      @map("patient_id")
  doctorId          Int      @map("doctor_id")
  appointmentId     Int?     @map("appointment_id")
  recordType        RecordType @map("record_type")
  title             String
  description       String?
  diagnosis         String?
  treatment         String?
  medications       Json?    // Array of medication objects
  vitalSigns        Json?    @map("vital_signs") // Blood pressure, temperature, etc.
  labResults        Json?    @map("lab_results") // Lab test results
  imagingResults    Json?    @map("imaging_results") // X-ray, MRI, etc.
  notes             String?
  attachments       Json?    // Array of file attachments
  isConfidential    Boolean  @default(false) @map("is_confidential")
  isActive          Boolean  @default(true) @map("is_active")
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")
  createdBy         Int      @map("created_by")
  updatedBy         Int?     @map("updated_by")

  @@map("medical_records")
}

model Prescription {
  id                Int      @id @default(autoincrement())
  patientId         Int      @map("patient_id")
  doctorId          Int      @map("doctor_id")
  medicalRecordId   Int?     @map("medical_record_id")
  medicationName    String   @map("medication_name")
  dosage            String
  frequency         String
  duration          String
  instructions      String?
  quantity          Int?
  refillsAllowed    Int      @default(0) @map("refills_allowed")
  refillsUsed       Int      @default(0) @map("refills_used")
  isActive          Boolean  @default(true) @map("is_active")
  prescribedAt      DateTime @default(now()) @map("prescribed_at")
  expiresAt         DateTime? @map("expires_at")
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")

  @@map("prescriptions")
}

model Allergy {
  id                Int      @id @default(autoincrement())
  patientId         Int      @map("patient_id")
  allergen          String
  reaction          String
  severity          AllergySeverity
  notes             String?
  isActive          Boolean  @default(true) @map("is_active")
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")

  @@map("allergies")
}

model Immunization {
  id                Int      @id @default(autoincrement())
  patientId         Int      @map("patient_id")
  vaccineName       String   @map("vaccine_name")
  vaccineType       String   @map("vaccine_type")
  administeredAt    DateTime @map("administered_at")
  administeredBy    Int      @map("administered_by")
  lotNumber         String?  @map("lot_number")
  expirationDate    DateTime? @map("expiration_date")
  nextDueDate       DateTime? @map("next_due_date")
  notes             String?
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")

  @@map("immunizations")
}

model LabTest {
  id                Int      @id @default(autoincrement())
  patientId         Int      @map("patient_id")
  doctorId          Int      @map("doctor_id")
  testName          String   @map("test_name")
  testType          String   @map("test_type")
  orderedAt         DateTime @map("ordered_at")
  collectedAt       DateTime? @map("collected_at")
  completedAt       DateTime? @map("completed_at")
  results           Json?
  referenceRange    Json?    @map("reference_range")
  status            LabTestStatus @default(ORDERED)
  notes             String?
  labName           String?  @map("lab_name")
  labAddress        String?  @map("lab_address")
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")

  @@map("lab_tests")
}

enum RecordType {
  CONSULTATION
  DIAGNOSIS
  TREATMENT
  FOLLOW_UP
  EMERGENCY
  PREVENTIVE
  SURGICAL
  LAB_RESULT
  IMAGING
  VACCINATION
}

enum AllergySeverity {
  MILD
  MODERATE
  SEVERE
  LIFE_THREATENING
}

enum LabTestStatus {
  ORDERED
  COLLECTED
  IN_PROGRESS
  COMPLETED
  CANCELLED
  FAILED
}
